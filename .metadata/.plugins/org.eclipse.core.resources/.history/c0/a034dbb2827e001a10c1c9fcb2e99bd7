grammar org.xtext.example.mydsl.JSchema with org.eclipse.xtext.common.Terminals

generate jSchema "http://www.xtext.org/example/mydsl/JSchema"

Model:
	AbstractObject+=AbstractObject*
;

Number:
    number=INT ('.' decimal=INT)?
;

AbstractObject:
	Object | PrimitiveObject
;
//(nestedObjectName=ID nestedObject=Object)

Object:
 	objectName=ID ('includes' includeObjects=Includes)? '{'  (properties+=hasProperties)? '}' 
;


PrimitiveObject:
	type=Types primitiveObjectName=ID ('with' primitiveProperties+=PrimitiveProperties (',' primitiveProperties+=PrimitiveProperties)*)? 
;

//ObjectRequireMinimumProperties:
//	'require' (('minimum') | ('maximum')) INT 'properties' properties=hasProperties
//;

Types:
//	object=Object |
	({STRING} 'String' string=STRING) | {Array} array=Array | 'num' number=Number
;


hasProperties:
	properties=Property
;

Property:
 	type=Types  
;

PrimitiveProperties:
	('length' INT '-' INT) | ('pattern' '"'STRING'"' ) | 'format' stringFormat=FormatTypes
;

enum FormatTypes:
	date_time='"date-time"' | 
	time='"time"' | 
	date='"date"' | 
	email='"email"' | 
	idn_email='"idn-email"' | 
	hostname='"hostname"' | 
	ipv4='"ipv4"' | 
	ipv6='"ipv6"' | 
	uri='"uri"' | 
	uri_reference='"uri-reference"' | 
	iri='"iri"' | 
	iri_reference='"iri-reference"' | 
	uri_template='"uri-template"' | 
	json_pointer='"json-pointer"' | 
	relative_json_pointer='"relative-json-pointer"' | 
	regex='"regex"'
;

Includes:
	objectID+=STRING (',' objectID+=STRING)*
;

//Types
Array:
 	arrayName=ID '[' (properties+=Property (',' properties+=Property)*)? ']'
;










