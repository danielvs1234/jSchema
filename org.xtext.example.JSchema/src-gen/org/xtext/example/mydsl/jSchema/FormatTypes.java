/**
 * generated by Xtext 2.21.0
 */
package org.xtext.example.mydsl.jSchema;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Format Types</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.jSchema.JSchemaPackage#getFormatTypes()
 * @model
 * @generated
 */
public enum FormatTypes implements Enumerator
{
  /**
   * The '<em><b>Default</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DEFAULT_VALUE
   * @generated
   * @ordered
   */
  DEFAULT(0, "default", "null"),

  /**
   * The '<em><b>Date time</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATE_TIME_VALUE
   * @generated
   * @ordered
   */
  DATE_TIME(1, "date_time", "date-time"),

  /**
   * The '<em><b>Time</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TIME_VALUE
   * @generated
   * @ordered
   */
  TIME(2, "time", "time"),

  /**
   * The '<em><b>Date</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATE_VALUE
   * @generated
   * @ordered
   */
  DATE(3, "date", "date"),

  /**
   * The '<em><b>Email</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EMAIL_VALUE
   * @generated
   * @ordered
   */
  EMAIL(4, "email", "email"),

  /**
   * The '<em><b>Idn email</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IDN_EMAIL_VALUE
   * @generated
   * @ordered
   */
  IDN_EMAIL(5, "idn_email", "idn-email"),

  /**
   * The '<em><b>Hostname</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #HOSTNAME_VALUE
   * @generated
   * @ordered
   */
  HOSTNAME(6, "hostname", "hostname"),

  /**
   * The '<em><b>Ipv4</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IPV4_VALUE
   * @generated
   * @ordered
   */
  IPV4(7, "ipv4", "ipv4"),

  /**
   * The '<em><b>Ipv6</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IPV6_VALUE
   * @generated
   * @ordered
   */
  IPV6(8, "ipv6", "ipv6"),

  /**
   * The '<em><b>Uri</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #URI_VALUE
   * @generated
   * @ordered
   */
  URI(9, "uri", "uri"),

  /**
   * The '<em><b>Uri reference</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #URI_REFERENCE_VALUE
   * @generated
   * @ordered
   */
  URI_REFERENCE(10, "uri_reference", "uri-reference"),

  /**
   * The '<em><b>Iri</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IRI_VALUE
   * @generated
   * @ordered
   */
  IRI(11, "iri", "iri"),

  /**
   * The '<em><b>Iri reference</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IRI_REFERENCE_VALUE
   * @generated
   * @ordered
   */
  IRI_REFERENCE(12, "iri_reference", "iri-reference"),

  /**
   * The '<em><b>Uri template</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #URI_TEMPLATE_VALUE
   * @generated
   * @ordered
   */
  URI_TEMPLATE(13, "uri_template", "uri-template"),

  /**
   * The '<em><b>Json pointer</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JSON_POINTER_VALUE
   * @generated
   * @ordered
   */
  JSON_POINTER(14, "json_pointer", "json-pointer"),

  /**
   * The '<em><b>Relative json pointer</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RELATIVE_JSON_POINTER_VALUE
   * @generated
   * @ordered
   */
  RELATIVE_JSON_POINTER(15, "relative_json_pointer", "relative-json-pointer"),

  /**
   * The '<em><b>Regex</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REGEX_VALUE
   * @generated
   * @ordered
   */
  REGEX(16, "regex", "regex");

  /**
   * The '<em><b>Default</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DEFAULT
   * @model name="default" literal="null"
   * @generated
   * @ordered
   */
  public static final int DEFAULT_VALUE = 0;

  /**
   * The '<em><b>Date time</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATE_TIME
   * @model name="date_time" literal="date-time"
   * @generated
   * @ordered
   */
  public static final int DATE_TIME_VALUE = 1;

  /**
   * The '<em><b>Time</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TIME
   * @model name="time"
   * @generated
   * @ordered
   */
  public static final int TIME_VALUE = 2;

  /**
   * The '<em><b>Date</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATE
   * @model name="date"
   * @generated
   * @ordered
   */
  public static final int DATE_VALUE = 3;

  /**
   * The '<em><b>Email</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EMAIL
   * @model name="email"
   * @generated
   * @ordered
   */
  public static final int EMAIL_VALUE = 4;

  /**
   * The '<em><b>Idn email</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IDN_EMAIL
   * @model name="idn_email" literal="idn-email"
   * @generated
   * @ordered
   */
  public static final int IDN_EMAIL_VALUE = 5;

  /**
   * The '<em><b>Hostname</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #HOSTNAME
   * @model name="hostname"
   * @generated
   * @ordered
   */
  public static final int HOSTNAME_VALUE = 6;

  /**
   * The '<em><b>Ipv4</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IPV4
   * @model name="ipv4"
   * @generated
   * @ordered
   */
  public static final int IPV4_VALUE = 7;

  /**
   * The '<em><b>Ipv6</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IPV6
   * @model name="ipv6"
   * @generated
   * @ordered
   */
  public static final int IPV6_VALUE = 8;

  /**
   * The '<em><b>Uri</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #URI
   * @model name="uri"
   * @generated
   * @ordered
   */
  public static final int URI_VALUE = 9;

  /**
   * The '<em><b>Uri reference</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #URI_REFERENCE
   * @model name="uri_reference" literal="uri-reference"
   * @generated
   * @ordered
   */
  public static final int URI_REFERENCE_VALUE = 10;

  /**
   * The '<em><b>Iri</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IRI
   * @model name="iri"
   * @generated
   * @ordered
   */
  public static final int IRI_VALUE = 11;

  /**
   * The '<em><b>Iri reference</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IRI_REFERENCE
   * @model name="iri_reference" literal="iri-reference"
   * @generated
   * @ordered
   */
  public static final int IRI_REFERENCE_VALUE = 12;

  /**
   * The '<em><b>Uri template</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #URI_TEMPLATE
   * @model name="uri_template" literal="uri-template"
   * @generated
   * @ordered
   */
  public static final int URI_TEMPLATE_VALUE = 13;

  /**
   * The '<em><b>Json pointer</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JSON_POINTER
   * @model name="json_pointer" literal="json-pointer"
   * @generated
   * @ordered
   */
  public static final int JSON_POINTER_VALUE = 14;

  /**
   * The '<em><b>Relative json pointer</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RELATIVE_JSON_POINTER
   * @model name="relative_json_pointer" literal="relative-json-pointer"
   * @generated
   * @ordered
   */
  public static final int RELATIVE_JSON_POINTER_VALUE = 15;

  /**
   * The '<em><b>Regex</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REGEX
   * @model name="regex"
   * @generated
   * @ordered
   */
  public static final int REGEX_VALUE = 16;

  /**
   * An array of all the '<em><b>Format Types</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final FormatTypes[] VALUES_ARRAY =
    new FormatTypes[]
    {
      DEFAULT,
      DATE_TIME,
      TIME,
      DATE,
      EMAIL,
      IDN_EMAIL,
      HOSTNAME,
      IPV4,
      IPV6,
      URI,
      URI_REFERENCE,
      IRI,
      IRI_REFERENCE,
      URI_TEMPLATE,
      JSON_POINTER,
      RELATIVE_JSON_POINTER,
      REGEX,
    };

  /**
   * A public read-only list of all the '<em><b>Format Types</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<FormatTypes> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Format Types</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FormatTypes get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      FormatTypes result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Format Types</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FormatTypes getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      FormatTypes result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Format Types</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FormatTypes get(int value)
  {
    switch (value)
    {
      case DEFAULT_VALUE: return DEFAULT;
      case DATE_TIME_VALUE: return DATE_TIME;
      case TIME_VALUE: return TIME;
      case DATE_VALUE: return DATE;
      case EMAIL_VALUE: return EMAIL;
      case IDN_EMAIL_VALUE: return IDN_EMAIL;
      case HOSTNAME_VALUE: return HOSTNAME;
      case IPV4_VALUE: return IPV4;
      case IPV6_VALUE: return IPV6;
      case URI_VALUE: return URI;
      case URI_REFERENCE_VALUE: return URI_REFERENCE;
      case IRI_VALUE: return IRI;
      case IRI_REFERENCE_VALUE: return IRI_REFERENCE;
      case URI_TEMPLATE_VALUE: return URI_TEMPLATE;
      case JSON_POINTER_VALUE: return JSON_POINTER;
      case RELATIVE_JSON_POINTER_VALUE: return RELATIVE_JSON_POINTER;
      case REGEX_VALUE: return REGEX;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private FormatTypes(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //FormatTypes
