/*
 * generated by Xtext 2.21.0
 */
grammar InternalJSchema;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.JSchemaGrammarAccess;

}

@parser::members {

 	private JSchemaGrammarAccess grammarAccess;

    public InternalJSchemaParser(TokenStream input, JSchemaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected JSchemaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getAbstractObjectAbstractObjectParserRuleCall_0());
			}
			lv_AbstractObject_0_0=ruleAbstractObject
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"AbstractObject",
					lv_AbstractObject_0_0,
					"org.xtext.example.mydsl.JSchema.AbstractObject");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_number_0_0=RULE_INT
				{
					newLeafNode(lv_number_0_0, grammarAccess.getNumberAccess().getNumberINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getNumberAccess().getFullStopKeyword_1_0());
			}
			(
				(
					lv_decimal_2_0=RULE_INT
					{
						newLeafNode(lv_decimal_2_0, grammarAccess.getNumberAccess().getDecimalINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumberRule());
						}
						setWithLastConsumed(
							$current,
							"decimal",
							lv_decimal_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAbstractObject
entryRuleAbstractObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractObjectRule()); }
	iv_ruleAbstractObject=ruleAbstractObject
	{ $current=$iv_ruleAbstractObject.current; }
	EOF;

// Rule AbstractObject
ruleAbstractObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractObjectAccess().getMainObjectParserRuleCall_0());
		}
		this_MainObject_0=ruleMainObject
		{
			$current = $this_MainObject_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractObjectAccess().getPrimitiveObjectParserRuleCall_1());
		}
		this_PrimitiveObject_1=rulePrimitiveObject
		{
			$current = $this_PrimitiveObject_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMainObject
entryRuleMainObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainObjectRule()); }
	iv_ruleMainObject=ruleMainObject
	{ $current=$iv_ruleMainObject.current; }
	EOF;

// Rule MainObject
ruleMainObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_objectName_0_0=RULE_ID
				{
					newLeafNode(lv_objectName_0_0, grammarAccess.getMainObjectAccess().getObjectNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMainObjectRule());
					}
					setWithLastConsumed(
						$current,
						"objectName",
						lv_objectName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMainObjectAccess().getRootIsRootParserRuleCall_1_0());
				}
				lv_root_1_0=ruleIsRoot
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainObjectRule());
					}
					set(
						$current,
						"root",
						lv_root_1_0,
						"org.xtext.example.mydsl.JSchema.IsRoot");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='includes'
			{
				newLeafNode(otherlv_2, grammarAccess.getMainObjectAccess().getIncludesKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMainObjectAccess().getIncludeObjectsIncludesParserRuleCall_2_1_0());
					}
					lv_includeObjects_3_0=ruleIncludes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMainObjectRule());
						}
						set(
							$current,
							"includeObjects",
							lv_includeObjects_3_0,
							"org.xtext.example.mydsl.JSchema.Includes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getMainObjectAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMainObjectAccess().getPropertiesHasPropertiesParserRuleCall_4_0_0());
					}
					lv_properties_5_0=rulehasProperties
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMainObjectRule());
						}
						add(
							$current,
							"properties",
							lv_properties_5_0,
							"org.xtext.example.mydsl.JSchema.hasProperties");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getMainObjectAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMainObjectAccess().getPropertiesHasPropertiesParserRuleCall_4_1_1_0());
						}
						lv_properties_7_0=rulehasProperties
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMainObjectRule());
							}
							add(
								$current,
								"properties",
								lv_properties_7_0,
								"org.xtext.example.mydsl.JSchema.hasProperties");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getMainObjectAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePrimitiveObject
entryRulePrimitiveObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveObjectRule()); }
	iv_rulePrimitiveObject=rulePrimitiveObject
	{ $current=$iv_rulePrimitiveObject.current; }
	EOF;

// Rule PrimitiveObject
rulePrimitiveObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveObjectAccess().getTypePrimitiveTypesParserRuleCall_0_0());
				}
				lv_type_0_0=rulePrimitiveTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveObjectRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.JSchema.PrimitiveTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='with'
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimitiveObjectAccess().getWithKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesPrimitivePropertiesParserRuleCall_1_1_0());
					}
					lv_primitiveProperties_2_0=rulePrimitiveProperties
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveObjectRule());
						}
						add(
							$current,
							"primitiveProperties",
							lv_primitiveProperties_2_0,
							"org.xtext.example.mydsl.JSchema.PrimitiveProperties");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getPrimitiveObjectAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesPrimitivePropertiesParserRuleCall_1_2_1_0());
						}
						lv_primitiveProperties_4_0=rulePrimitiveProperties
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimitiveObjectRule());
							}
							add(
								$current,
								"primitiveProperties",
								lv_primitiveProperties_4_0,
								"org.xtext.example.mydsl.JSchema.PrimitiveProperties");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimitiveObjectAccess().getSemicolonKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRulePrimitiveTypes
entryRulePrimitiveTypes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypesRule()); }
	iv_rulePrimitiveTypes=rulePrimitiveTypes
	{ $current=$iv_rulePrimitiveTypes.current; }
	EOF;

// Rule PrimitiveTypes
rulePrimitiveTypes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='String'
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimitiveTypesAccess().getStringKeyword_0_0());
			}
			(
				(
					lv_string_1_0=RULE_STRING
					{
						newLeafNode(lv_string_1_0, grammarAccess.getPrimitiveTypesAccess().getStringSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveTypesRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveTypesAccess().getArrayArrayParserRuleCall_1_0());
				}
				lv_array_2_0=ruleArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveTypesRule());
					}
					set(
						$current,
						"array",
						lv_array_2_0,
						"org.xtext.example.mydsl.JSchema.Array");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_3='num'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimitiveTypesAccess().getNumKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveTypesAccess().getNumberNumberParserRuleCall_2_1_0());
					}
					lv_number_4_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveTypesRule());
						}
						set(
							$current,
							"number",
							lv_number_4_0,
							"org.xtext.example.mydsl.JSchema.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleIsRoot
entryRuleIsRoot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsRootRule()); }
	iv_ruleIsRoot=ruleIsRoot
	{ $current=$iv_ruleIsRoot.current; }
	EOF;

// Rule IsRoot
ruleIsRoot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_string_0_0='root'
			{
				newLeafNode(lv_string_0_0, grammarAccess.getIsRootAccess().getStringRootKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIsRootRule());
				}
				setWithLastConsumed($current, "string", lv_string_0_0, "root");
			}
		)
	)
;

// Entry rule entryRulehasProperties
entryRulehasProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHasPropertiesRule()); }
	iv_rulehasProperties=rulehasProperties
	{ $current=$iv_rulehasProperties.current; }
	EOF;

// Rule hasProperties
rulehasProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getHasPropertiesAccess().getPropertiesPropertyParserRuleCall_0());
			}
			lv_properties_0_0=ruleProperty
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getHasPropertiesRule());
				}
				set(
					$current,
					"properties",
					lv_properties_0_0,
					"org.xtext.example.mydsl.JSchema.Property");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getPropPrimPrimitiveObjectParserRuleCall_0_0());
				}
				lv_propPrim_0_0=rulePrimitiveObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"propPrim",
						lv_propPrim_0_0,
						"org.xtext.example.mydsl.JSchema.PrimitiveObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getPropObjMainObjectParserRuleCall_1_0());
				}
				lv_propObj_1_0=ruleMainObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"propObj",
						lv_propObj_1_0,
						"org.xtext.example.mydsl.JSchema.MainObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimitiveProperties
entryRulePrimitiveProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitivePropertiesRule()); }
	iv_rulePrimitiveProperties=rulePrimitiveProperties
	{ $current=$iv_rulePrimitiveProperties.current; }
	EOF;

// Rule PrimitiveProperties
rulePrimitiveProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='length'
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimitivePropertiesAccess().getLengthKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitivePropertiesAccess().getStringLengthStringLengthParserRuleCall_0_1_0());
					}
					lv_stringLength_1_0=ruleStringLength
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitivePropertiesRule());
						}
						set(
							$current,
							"stringLength",
							lv_stringLength_1_0,
							"org.xtext.example.mydsl.JSchema.StringLength");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='pattern'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimitivePropertiesAccess().getPatternKeyword_1_0());
			}
			(
				(
					lv_patternString_3_0=RULE_STRING
					{
						newLeafNode(lv_patternString_3_0, grammarAccess.getPrimitivePropertiesAccess().getPatternStringSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitivePropertiesRule());
						}
						setWithLastConsumed(
							$current,
							"patternString",
							lv_patternString_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			otherlv_4='format'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimitivePropertiesAccess().getFormatKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitivePropertiesAccess().getStringFormatFormatTypesEnumRuleCall_2_1_0());
					}
					lv_stringFormat_5_0=ruleFormatTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitivePropertiesRule());
						}
						set(
							$current,
							"stringFormat",
							lv_stringFormat_5_0,
							"org.xtext.example.mydsl.JSchema.FormatTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStringLength
entryRuleStringLength returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringLengthRule()); }
	iv_ruleStringLength=ruleStringLength
	{ $current=$iv_ruleStringLength.current.getText(); }
	EOF;

// Rule StringLength
ruleStringLength returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getStringLengthAccess().getINTTerminalRuleCall_0());
		}
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStringLengthAccess().getHyphenMinusKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getStringLengthAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleIncludes
entryRuleIncludes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncludesRule()); }
	iv_ruleIncludes=ruleIncludes
	{ $current=$iv_ruleIncludes.current; }
	EOF;

// Rule Includes
ruleIncludes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_objectID_0_0=RULE_STRING
				{
					newLeafNode(lv_objectID_0_0, grammarAccess.getIncludesAccess().getObjectIDSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIncludesRule());
					}
					addWithLastConsumed(
						$current,
						"objectID",
						lv_objectID_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getIncludesAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_objectID_2_0=RULE_STRING
					{
						newLeafNode(lv_objectID_2_0, grammarAccess.getIncludesAccess().getObjectIDSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIncludesRule());
						}
						addWithLastConsumed(
							$current,
							"objectID",
							lv_objectID_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	iv_ruleArray=ruleArray
	{ $current=$iv_ruleArray.current; }
	EOF;

// Rule Array
ruleArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_arrayName_0_0=RULE_ID
				{
					newLeafNode(lv_arrayName_0_0, grammarAccess.getArrayAccess().getArrayNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayRule());
					}
					setWithLastConsumed(
						$current,
						"arrayName",
						lv_arrayName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayAccess().getPropertiesPropertyParserRuleCall_2_0_0());
					}
					lv_properties_2_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayRule());
						}
						add(
							$current,
							"properties",
							lv_properties_2_0,
							"org.xtext.example.mydsl.JSchema.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getArrayAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayAccess().getPropertiesPropertyParserRuleCall_2_1_1_0());
						}
						lv_properties_4_0=ruleProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayRule());
							}
							add(
								$current,
								"properties",
								lv_properties_4_0,
								"org.xtext.example.mydsl.JSchema.Property");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayAccess().getArrayTypeArrayTypeParserRuleCall_3_0());
				}
				lv_arrayType_5_0=ruleArrayType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayRule());
					}
					set(
						$current,
						"arrayType",
						lv_arrayType_5_0,
						"org.xtext.example.mydsl.JSchema.ArrayType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getArrayAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleArrayType
entryRuleArrayType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	iv_ruleArrayType=ruleArrayType
	{ $current=$iv_ruleArrayType.current.getText(); }
	EOF;

// Rule ArrayType
ruleArrayType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='string'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArrayTypeAccess().getStringKeyword_0());
		}
		    |
		kw='integer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArrayTypeAccess().getIntegerKeyword_1());
		}
		    |
		kw='float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArrayTypeAccess().getFloatKeyword_2());
		}
		    |
		kw='double'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArrayTypeAccess().getDoubleKeyword_3());
		}
	)
;

// Rule FormatTypes
ruleFormatTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='null'
			{
				$current = grammarAccess.getFormatTypesAccess().getDefaultEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFormatTypesAccess().getDefaultEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='date-time'
			{
				$current = grammarAccess.getFormatTypesAccess().getDate_timeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFormatTypesAccess().getDate_timeEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='time'
			{
				$current = grammarAccess.getFormatTypesAccess().getTimeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFormatTypesAccess().getTimeEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='date'
			{
				$current = grammarAccess.getFormatTypesAccess().getDateEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getFormatTypesAccess().getDateEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='email'
			{
				$current = grammarAccess.getFormatTypesAccess().getEmailEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getFormatTypesAccess().getEmailEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='idn-email'
			{
				$current = grammarAccess.getFormatTypesAccess().getIdn_emailEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getFormatTypesAccess().getIdn_emailEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='hostname'
			{
				$current = grammarAccess.getFormatTypesAccess().getHostnameEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getFormatTypesAccess().getHostnameEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='ipv4'
			{
				$current = grammarAccess.getFormatTypesAccess().getIpv4EnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getFormatTypesAccess().getIpv4EnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='ipv6'
			{
				$current = grammarAccess.getFormatTypesAccess().getIpv6EnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getFormatTypesAccess().getIpv6EnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='uri'
			{
				$current = grammarAccess.getFormatTypesAccess().getUriEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getFormatTypesAccess().getUriEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='uri-reference'
			{
				$current = grammarAccess.getFormatTypesAccess().getUri_referenceEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getFormatTypesAccess().getUri_referenceEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='iri'
			{
				$current = grammarAccess.getFormatTypesAccess().getIriEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getFormatTypesAccess().getIriEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='iri-reference'
			{
				$current = grammarAccess.getFormatTypesAccess().getIri_referenceEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getFormatTypesAccess().getIri_referenceEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='uri-template'
			{
				$current = grammarAccess.getFormatTypesAccess().getUri_templateEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getFormatTypesAccess().getUri_templateEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='json-pointer'
			{
				$current = grammarAccess.getFormatTypesAccess().getJson_pointerEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getFormatTypesAccess().getJson_pointerEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='relative-json-pointer'
			{
				$current = grammarAccess.getFormatTypesAccess().getRelative_json_pointerEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getFormatTypesAccess().getRelative_json_pointerEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='regex'
			{
				$current = grammarAccess.getFormatTypesAccess().getRegexEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getFormatTypesAccess().getRegexEnumLiteralDeclaration_16());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
