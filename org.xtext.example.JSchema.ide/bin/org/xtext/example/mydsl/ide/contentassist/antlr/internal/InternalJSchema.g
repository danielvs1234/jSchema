/*
 * generated by Xtext 2.21.0
 */
grammar InternalJSchema;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.JSchemaGrammarAccess;

}
@parser::members {
	private JSchemaGrammarAccess grammarAccess;

	public void setGrammarAccess(JSchemaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getObjectParserRuleCall()); }
		ruleObject
		{ after(grammarAccess.getModelAccess().getObjectParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getAlternatives()); }
		(rule__Number__Alternatives)
		{ after(grammarAccess.getNumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getGroup()); }
		(rule__Object__Group__0)
		{ after(grammarAccess.getObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectRequireMinimumProperties
entryRuleObjectRequireMinimumProperties
:
{ before(grammarAccess.getObjectRequireMinimumPropertiesRule()); }
	 ruleObjectRequireMinimumProperties
{ after(grammarAccess.getObjectRequireMinimumPropertiesRule()); } 
	 EOF 
;

// Rule ObjectRequireMinimumProperties
ruleObjectRequireMinimumProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getGroup()); }
		(rule__ObjectRequireMinimumProperties__Group__0)
		{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypes
entryRuleTypes
:
{ before(grammarAccess.getTypesRule()); }
	 ruleTypes
{ after(grammarAccess.getTypesRule()); } 
	 EOF 
;

// Rule Types
ruleTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypesAccess().getAlternatives()); }
		(rule__Types__Alternatives)
		{ after(grammarAccess.getTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperties
entryRuleProperties
:
{ before(grammarAccess.getPropertiesRule()); }
	 ruleProperties
{ after(grammarAccess.getPropertiesRule()); } 
	 EOF 
;

// Rule Properties
ruleProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertiesAccess().getGroup()); }
		(rule__Properties__Group__0)
		{ after(grammarAccess.getPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getGroup_0()); }
		(rule__Number__Group_0__0)
		{ after(grammarAccess.getNumberAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getDOUBLETerminalRuleCall_1()); }
		RULE_DOUBLE
		{ after(grammarAccess.getNumberAccess().getDOUBLETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getMinimumKeyword_1_0()); }
		'minimum'
		{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getMinimumKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getMaximumKeyword_1_1()); }
		'maximum'
		{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getMaximumKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getGroup_0()); }
		(rule__Types__Group_0__0)
		{ after(grammarAccess.getTypesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getGroup_1()); }
		(rule__Types__Group_1__0)
		{ after(grammarAccess.getTypesAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getGroup_2()); }
		(rule__Types__Group_2__0)
		{ after(grammarAccess.getTypesAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getGroup_3()); }
		(rule__Types__Group_3__0)
		{ after(grammarAccess.getTypesAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getGroup_4()); }
		(rule__Types__Group_4__0)
		{ after(grammarAccess.getTypesAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getGroup_5()); }
		(rule__Types__Group_5__0)
		{ after(grammarAccess.getTypesAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_0__0__Impl
	rule__Number__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getNumKeyword_0_0()); }
	'num'
	{ after(grammarAccess.getNumberAccess().getNumKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getValueAssignment_0_1()); }
	(rule__Number__ValueAssignment_0_1)
	{ after(grammarAccess.getNumberAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjectKeyword_0()); }
	'object'
	{ after(grammarAccess.getObjectAccess().getObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjectRequireMinimumPropertiesParserRuleCall_1()); }
	(ruleObjectRequireMinimumProperties)?
	{ after(grammarAccess.getObjectAccess().getObjectRequireMinimumPropertiesParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectRequireMinimumProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectRequireMinimumProperties__Group__0__Impl
	rule__ObjectRequireMinimumProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getRequireKeyword_0()); }
	'require'
	{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectRequireMinimumProperties__Group__1__Impl
	rule__ObjectRequireMinimumProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getAlternatives_1()); }
	(rule__ObjectRequireMinimumProperties__Alternatives_1)
	{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectRequireMinimumProperties__Group__2__Impl
	rule__ObjectRequireMinimumProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getNumberParserRuleCall_2()); }
	ruleNumber
	{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getNumberParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectRequireMinimumProperties__Group__3__Impl
	rule__ObjectRequireMinimumProperties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getPropertiesKeyword_3()); }
	'properties'
	{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getPropertiesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectRequireMinimumProperties__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getPropertiesAssignment_4()); }
	(rule__ObjectRequireMinimumProperties__PropertiesAssignment_4)
	{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_0__0__Impl
	rule__Types__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getObjectAction_0_0()); }
	()
	{ after(grammarAccess.getTypesAccess().getObjectAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getObjectKeyword_0_1()); }
	'object'
	{ after(grammarAccess.getTypesAccess().getObjectKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_1__0__Impl
	rule__Types__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getSTRINGAction_1_0()); }
	()
	{ after(grammarAccess.getTypesAccess().getSTRINGAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getStringKeyword_1_1()); }
	'string'
	{ after(grammarAccess.getTypesAccess().getStringKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_2__0__Impl
	rule__Types__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getNumberAction_2_0()); }
	()
	{ after(grammarAccess.getTypesAccess().getNumberAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getNumberKeyword_2_1()); }
	'number'
	{ after(grammarAccess.getTypesAccess().getNumberKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_3__0__Impl
	rule__Types__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getArrayAction_3_0()); }
	()
	{ after(grammarAccess.getTypesAccess().getArrayAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getArrayKeyword_3_1()); }
	'array'
	{ after(grammarAccess.getTypesAccess().getArrayKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_4__0__Impl
	rule__Types__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getBooleanAction_4_0()); }
	()
	{ after(grammarAccess.getTypesAccess().getBooleanAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getBooleanKeyword_4_1()); }
	'boolean'
	{ after(grammarAccess.getTypesAccess().getBooleanKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_5__0__Impl
	rule__Types__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getNullAction_5_0()); }
	()
	{ after(grammarAccess.getTypesAccess().getNullAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getNullKeyword_5_1()); }
	'null'
	{ after(grammarAccess.getTypesAccess().getNullKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__0__Impl
	rule__Properties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPropertiesAction_0()); }
	()
	{ after(grammarAccess.getPropertiesAccess().getPropertiesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPropertiesAssignment_1()); }
	(rule__Properties__PropertiesAssignment_1)*
	{ after(grammarAccess.getPropertiesAccess().getPropertiesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameKeyword_0()); }
	'name'
	{ after(grammarAccess.getPropertyAccess().getNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
	(rule__Property__NameAssignment_1)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getTypeKeyword_2()); }
	'type'
	{ after(grammarAccess.getPropertyAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getTypeAssignment_3()); }
	(rule__Property__TypeAssignment_3)
	{ after(grammarAccess.getPropertyAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectRequireMinimumProperties__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectRequireMinimumPropertiesAccess().getPropertiesPropertiesParserRuleCall_4_0()); }
		ruleProperties
		{ after(grammarAccess.getObjectRequireMinimumPropertiesAccess().getPropertiesPropertiesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__PropertiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertiesAccess().getPropertiesPropertyParserRuleCall_1_0()); }
		ruleProperty
		{ after(grammarAccess.getPropertiesAccess().getPropertiesPropertyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTypeTypesParserRuleCall_3_0()); }
		ruleTypes
		{ after(grammarAccess.getPropertyAccess().getTypeTypesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_INT ('.' RULE_INT+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
