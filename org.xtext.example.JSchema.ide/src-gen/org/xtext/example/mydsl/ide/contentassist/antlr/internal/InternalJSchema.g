/*
 * generated by Xtext 2.21.0
 */
grammar InternalJSchema;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.JSchemaGrammarAccess;

}
@parser::members {
	private JSchemaGrammarAccess grammarAccess;

	public void setGrammarAccess(JSchemaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAbstractObjectAssignment()); }
		(rule__Model__AbstractObjectAssignment)*
		{ after(grammarAccess.getModelAccess().getAbstractObjectAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractObject
entryRuleAbstractObject
:
{ before(grammarAccess.getAbstractObjectRule()); }
	 ruleAbstractObject
{ after(grammarAccess.getAbstractObjectRule()); } 
	 EOF 
;

// Rule AbstractObject
ruleAbstractObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractObjectAccess().getAlternatives()); }
		(rule__AbstractObject__Alternatives)
		{ after(grammarAccess.getAbstractObjectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getGroup()); }
		(rule__Object__Group__0)
		{ after(grammarAccess.getObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveObject
entryRulePrimitiveObject
:
{ before(grammarAccess.getPrimitiveObjectRule()); }
	 rulePrimitiveObject
{ after(grammarAccess.getPrimitiveObjectRule()); } 
	 EOF 
;

// Rule PrimitiveObject
rulePrimitiveObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveObjectAccess().getGroup()); }
		(rule__PrimitiveObject__Group__0)
		{ after(grammarAccess.getPrimitiveObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypes
entryRuleTypes
:
{ before(grammarAccess.getTypesRule()); }
	 ruleTypes
{ after(grammarAccess.getTypesRule()); } 
	 EOF 
;

// Rule Types
ruleTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypesAccess().getAlternatives()); }
		(rule__Types__Alternatives)
		{ after(grammarAccess.getTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulehasProperties
entryRulehasProperties
:
{ before(grammarAccess.getHasPropertiesRule()); }
	 rulehasProperties
{ after(grammarAccess.getHasPropertiesRule()); } 
	 EOF 
;

// Rule hasProperties
rulehasProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHasPropertiesAccess().getPropertiesAssignment()); }
		(rule__HasProperties__PropertiesAssignment)
		{ after(grammarAccess.getHasPropertiesAccess().getPropertiesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveProperties
entryRulePrimitiveProperties
:
{ before(grammarAccess.getPrimitivePropertiesRule()); }
	 rulePrimitiveProperties
{ after(grammarAccess.getPrimitivePropertiesRule()); } 
	 EOF 
;

// Rule PrimitiveProperties
rulePrimitiveProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitivePropertiesAccess().getAlternatives()); }
		(rule__PrimitiveProperties__Alternatives)
		{ after(grammarAccess.getPrimitivePropertiesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLength
entryRuleStringLength
:
{ before(grammarAccess.getStringLengthRule()); }
	 ruleStringLength
{ after(grammarAccess.getStringLengthRule()); } 
	 EOF 
;

// Rule StringLength
ruleStringLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLengthAccess().getGroup()); }
		(rule__StringLength__Group__0)
		{ after(grammarAccess.getStringLengthAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIncludes
entryRuleIncludes
:
{ before(grammarAccess.getIncludesRule()); }
	 ruleIncludes
{ after(grammarAccess.getIncludesRule()); } 
	 EOF 
;

// Rule Includes
ruleIncludes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludesAccess().getGroup()); }
		(rule__Includes__Group__0)
		{ after(grammarAccess.getIncludesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArray
entryRuleArray
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayAccess().getGroup()); }
		(rule__Array__Group__0)
		{ after(grammarAccess.getArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FormatTypes
ruleFormatTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatTypesAccess().getAlternatives()); }
		(rule__FormatTypes__Alternatives)
		{ after(grammarAccess.getFormatTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractObject__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractObjectAccess().getObjectParserRuleCall_0()); }
		ruleObject
		{ after(grammarAccess.getAbstractObjectAccess().getObjectParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractObjectAccess().getPrimitiveObjectParserRuleCall_1()); }
		rulePrimitiveObject
		{ after(grammarAccess.getAbstractObjectAccess().getPrimitiveObjectParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getGroup_0()); }
		(rule__Types__Group_0__0)
		{ after(grammarAccess.getTypesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getArrayAssignment_1()); }
		(rule__Types__ArrayAssignment_1)
		{ after(grammarAccess.getTypesAccess().getArrayAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getGroup_2()); }
		(rule__Types__Group_2__0)
		{ after(grammarAccess.getTypesAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTypeAssignment_0()); }
		(rule__Property__TypeAssignment_0)
		{ after(grammarAccess.getPropertyAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getObjectAssignment_1()); }
		(rule__Property__ObjectAssignment_1)
		{ after(grammarAccess.getPropertyAccess().getObjectAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitivePropertiesAccess().getGroup_0()); }
		(rule__PrimitiveProperties__Group_0__0)
		{ after(grammarAccess.getPrimitivePropertiesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitivePropertiesAccess().getGroup_1()); }
		(rule__PrimitiveProperties__Group_1__0)
		{ after(grammarAccess.getPrimitivePropertiesAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitivePropertiesAccess().getGroup_2()); }
		(rule__PrimitiveProperties__Group_2__0)
		{ after(grammarAccess.getPrimitivePropertiesAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormatTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatTypesAccess().getDate_timeEnumLiteralDeclaration_0()); }
		('"date-time"')
		{ after(grammarAccess.getFormatTypesAccess().getDate_timeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getTimeEnumLiteralDeclaration_1()); }
		('"time"')
		{ after(grammarAccess.getFormatTypesAccess().getTimeEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getDateEnumLiteralDeclaration_2()); }
		('"date"')
		{ after(grammarAccess.getFormatTypesAccess().getDateEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getEmailEnumLiteralDeclaration_3()); }
		('"email"')
		{ after(grammarAccess.getFormatTypesAccess().getEmailEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getIdn_emailEnumLiteralDeclaration_4()); }
		('"idn-email"')
		{ after(grammarAccess.getFormatTypesAccess().getIdn_emailEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getHostnameEnumLiteralDeclaration_5()); }
		('"hostname"')
		{ after(grammarAccess.getFormatTypesAccess().getHostnameEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getIpv4EnumLiteralDeclaration_6()); }
		('"ipv4"')
		{ after(grammarAccess.getFormatTypesAccess().getIpv4EnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getIpv6EnumLiteralDeclaration_7()); }
		('"ipv6"')
		{ after(grammarAccess.getFormatTypesAccess().getIpv6EnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getUriEnumLiteralDeclaration_8()); }
		('"uri"')
		{ after(grammarAccess.getFormatTypesAccess().getUriEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getUri_referenceEnumLiteralDeclaration_9()); }
		('"uri-reference"')
		{ after(grammarAccess.getFormatTypesAccess().getUri_referenceEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getIriEnumLiteralDeclaration_10()); }
		('"iri"')
		{ after(grammarAccess.getFormatTypesAccess().getIriEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getIri_referenceEnumLiteralDeclaration_11()); }
		('"iri-reference"')
		{ after(grammarAccess.getFormatTypesAccess().getIri_referenceEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getUri_templateEnumLiteralDeclaration_12()); }
		('"uri-template"')
		{ after(grammarAccess.getFormatTypesAccess().getUri_templateEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getJson_pointerEnumLiteralDeclaration_13()); }
		('"json-pointer"')
		{ after(grammarAccess.getFormatTypesAccess().getJson_pointerEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getRelative_json_pointerEnumLiteralDeclaration_14()); }
		('"relative-json-pointer"')
		{ after(grammarAccess.getFormatTypesAccess().getRelative_json_pointerEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getFormatTypesAccess().getRegexEnumLiteralDeclaration_15()); }
		('"regex"')
		{ after(grammarAccess.getFormatTypesAccess().getRegexEnumLiteralDeclaration_15()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getNumberAssignment_0()); }
	(rule__Number__NumberAssignment_0)
	{ after(grammarAccess.getNumberAccess().getNumberAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_1()); }
	(rule__Number__Group_1__0)?
	{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getDecimalAssignment_1_1()); }
	(rule__Number__DecimalAssignment_1_1)
	{ after(grammarAccess.getNumberAccess().getDecimalAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjectNameAssignment_0()); }
	(rule__Object__ObjectNameAssignment_0)
	{ after(grammarAccess.getObjectAccess().getObjectNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getGroup_1()); }
	(rule__Object__Group_1__0)?
	{ after(grammarAccess.getObjectAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__2__Impl
	rule__Object__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__3__Impl
	rule__Object__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getPropertiesAssignment_3()); }
	(rule__Object__PropertiesAssignment_3)?
	{ after(grammarAccess.getObjectAccess().getPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_1__0__Impl
	rule__Object__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getIncludesKeyword_1_0()); }
	'includes'
	{ after(grammarAccess.getObjectAccess().getIncludesKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getIncludeObjectsAssignment_1_1()); }
	(rule__Object__IncludeObjectsAssignment_1_1)
	{ after(grammarAccess.getObjectAccess().getIncludeObjectsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveObject__Group__0__Impl
	rule__PrimitiveObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveObjectAccess().getTypeAssignment_0()); }
	(rule__PrimitiveObject__TypeAssignment_0)
	{ after(grammarAccess.getPrimitiveObjectAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveObject__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveObjectAccess().getGroup_1()); }
	(rule__PrimitiveObject__Group_1__0)?
	{ after(grammarAccess.getPrimitiveObjectAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveObject__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveObject__Group_1__0__Impl
	rule__PrimitiveObject__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveObjectAccess().getWithKeyword_1_0()); }
	'with'
	{ after(grammarAccess.getPrimitiveObjectAccess().getWithKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveObject__Group_1__1__Impl
	rule__PrimitiveObject__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesAssignment_1_1()); }
	(rule__PrimitiveObject__PrimitivePropertiesAssignment_1_1)
	{ after(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveObject__Group_1__2__Impl
	rule__PrimitiveObject__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveObjectAccess().getGroup_1_2()); }
	(rule__PrimitiveObject__Group_1_2__0)*
	{ after(grammarAccess.getPrimitiveObjectAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveObject__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveObjectAccess().getSemicolonKeyword_1_3()); }
	';'
	{ after(grammarAccess.getPrimitiveObjectAccess().getSemicolonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveObject__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveObject__Group_1_2__0__Impl
	rule__PrimitiveObject__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveObjectAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getPrimitiveObjectAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveObject__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesAssignment_1_2_1()); }
	(rule__PrimitiveObject__PrimitivePropertiesAssignment_1_2_1)
	{ after(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_0__0__Impl
	rule__Types__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getSTRINGAction_0_0()); }
	()
	{ after(grammarAccess.getTypesAccess().getSTRINGAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_0__1__Impl
	rule__Types__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getStringKeyword_0_1()); }
	'String'
	{ after(grammarAccess.getTypesAccess().getStringKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getStringAssignment_0_2()); }
	(rule__Types__StringAssignment_0_2)
	{ after(grammarAccess.getTypesAccess().getStringAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_2__0__Impl
	rule__Types__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getNumKeyword_2_0()); }
	'num'
	{ after(grammarAccess.getTypesAccess().getNumKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getNumberAssignment_2_1()); }
	(rule__Types__NumberAssignment_2_1)
	{ after(grammarAccess.getTypesAccess().getNumberAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveProperties__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveProperties__Group_0__0__Impl
	rule__PrimitiveProperties__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitivePropertiesAccess().getLengthKeyword_0_0()); }
	'length'
	{ after(grammarAccess.getPrimitivePropertiesAccess().getLengthKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveProperties__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitivePropertiesAccess().getStringLenghtAssignment_0_1()); }
	(rule__PrimitiveProperties__StringLenghtAssignment_0_1)
	{ after(grammarAccess.getPrimitivePropertiesAccess().getStringLenghtAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveProperties__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveProperties__Group_1__0__Impl
	rule__PrimitiveProperties__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitivePropertiesAccess().getPatternKeyword_1_0()); }
	'pattern'
	{ after(grammarAccess.getPrimitivePropertiesAccess().getPatternKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveProperties__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitivePropertiesAccess().getPatternStringAssignment_1_1()); }
	(rule__PrimitiveProperties__PatternStringAssignment_1_1)
	{ after(grammarAccess.getPrimitivePropertiesAccess().getPatternStringAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveProperties__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveProperties__Group_2__0__Impl
	rule__PrimitiveProperties__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitivePropertiesAccess().getFormatKeyword_2_0()); }
	'format'
	{ after(grammarAccess.getPrimitivePropertiesAccess().getFormatKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveProperties__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitivePropertiesAccess().getStringFormatAssignment_2_1()); }
	(rule__PrimitiveProperties__StringFormatAssignment_2_1)
	{ after(grammarAccess.getPrimitivePropertiesAccess().getStringFormatAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLength__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLength__Group__0__Impl
	rule__StringLength__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLength__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLengthAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getStringLengthAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLength__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLength__Group__1__Impl
	rule__StringLength__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLength__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLengthAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getStringLengthAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLength__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLength__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLength__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLengthAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getStringLengthAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Includes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Includes__Group__0__Impl
	rule__Includes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludesAccess().getObjectIDAssignment_0()); }
	(rule__Includes__ObjectIDAssignment_0)
	{ after(grammarAccess.getIncludesAccess().getObjectIDAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Includes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludesAccess().getGroup_1()); }
	(rule__Includes__Group_1__0)*
	{ after(grammarAccess.getIncludesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Includes__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Includes__Group_1__0__Impl
	rule__Includes__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludesAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIncludesAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Includes__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludesAccess().getObjectIDAssignment_1_1()); }
	(rule__Includes__ObjectIDAssignment_1_1)
	{ after(grammarAccess.getIncludesAccess().getObjectIDAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getArrayNameAssignment_0()); }
	(rule__Array__ArrayNameAssignment_0)
	{ after(grammarAccess.getArrayAccess().getArrayNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getGroup_2()); }
	(rule__Array__Group_2__0)?
	{ after(grammarAccess.getArrayAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_2__0__Impl
	rule__Array__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getPropertiesAssignment_2_0()); }
	(rule__Array__PropertiesAssignment_2_0)
	{ after(grammarAccess.getArrayAccess().getPropertiesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getGroup_2_1()); }
	(rule__Array__Group_2_1__0)*
	{ after(grammarAccess.getArrayAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_2_1__0__Impl
	rule__Array__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getArrayAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getPropertiesAssignment_2_1_1()); }
	(rule__Array__PropertiesAssignment_2_1_1)
	{ after(grammarAccess.getArrayAccess().getPropertiesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__AbstractObjectAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getAbstractObjectAbstractObjectParserRuleCall_0()); }
		ruleAbstractObject
		{ after(grammarAccess.getModelAccess().getAbstractObjectAbstractObjectParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getNumberINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getNumberINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__DecimalAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getDecimalINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getDecimalINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ObjectNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getObjectNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectAccess().getObjectNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__IncludeObjectsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getIncludeObjectsIncludesParserRuleCall_1_1_0()); }
		ruleIncludes
		{ after(grammarAccess.getObjectAccess().getIncludeObjectsIncludesParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getPropertiesHasPropertiesParserRuleCall_3_0()); }
		rulehasProperties
		{ after(grammarAccess.getObjectAccess().getPropertiesHasPropertiesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveObjectAccess().getTypeTypesParserRuleCall_0_0()); }
		ruleTypes
		{ after(grammarAccess.getPrimitiveObjectAccess().getTypeTypesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__PrimitivePropertiesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesPrimitivePropertiesParserRuleCall_1_1_0()); }
		rulePrimitiveProperties
		{ after(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesPrimitivePropertiesParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveObject__PrimitivePropertiesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesPrimitivePropertiesParserRuleCall_1_2_1_0()); }
		rulePrimitiveProperties
		{ after(grammarAccess.getPrimitiveObjectAccess().getPrimitivePropertiesPrimitivePropertiesParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__StringAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getStringSTRINGTerminalRuleCall_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypesAccess().getStringSTRINGTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__ArrayAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getArrayArrayParserRuleCall_1_0()); }
		ruleArray
		{ after(grammarAccess.getTypesAccess().getArrayArrayParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__NumberAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getNumberNumberParserRuleCall_2_1_0()); }
		ruleNumber
		{ after(grammarAccess.getTypesAccess().getNumberNumberParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HasProperties__PropertiesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHasPropertiesAccess().getPropertiesPropertyParserRuleCall_0()); }
		ruleProperty
		{ after(grammarAccess.getHasPropertiesAccess().getPropertiesPropertyParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTypeTypesParserRuleCall_0_0()); }
		ruleTypes
		{ after(grammarAccess.getPropertyAccess().getTypeTypesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ObjectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getObjectObjectParserRuleCall_1_0()); }
		ruleObject
		{ after(grammarAccess.getPropertyAccess().getObjectObjectParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__StringLenghtAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitivePropertiesAccess().getStringLenghtStringLengthParserRuleCall_0_1_0()); }
		ruleStringLength
		{ after(grammarAccess.getPrimitivePropertiesAccess().getStringLenghtStringLengthParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__PatternStringAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitivePropertiesAccess().getPatternStringSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimitivePropertiesAccess().getPatternStringSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveProperties__StringFormatAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitivePropertiesAccess().getStringFormatFormatTypesEnumRuleCall_2_1_0()); }
		ruleFormatTypes
		{ after(grammarAccess.getPrimitivePropertiesAccess().getStringFormatFormatTypesEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__ObjectIDAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludesAccess().getObjectIDSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getIncludesAccess().getObjectIDSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__ObjectIDAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludesAccess().getObjectIDSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getIncludesAccess().getObjectIDSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ArrayNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getArrayNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getArrayAccess().getArrayNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__PropertiesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getPropertiesPropertyParserRuleCall_2_0_0()); }
		ruleProperty
		{ after(grammarAccess.getArrayAccess().getPropertiesPropertyParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__PropertiesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getPropertiesPropertyParserRuleCall_2_1_1_0()); }
		ruleProperty
		{ after(grammarAccess.getArrayAccess().getPropertiesPropertyParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
